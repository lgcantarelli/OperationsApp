/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIv2;

import GUIv2.DateOperations;
import GUIv2.GUIGraphicsMethods;
import GUIv2.TableMethods;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import operationsapp.Charge;
import operationsapp.ChargeCategory;
import operationsapp.OperationsApp;
import operationsapp.Revenue;
import operationsapp.RevenueCategory;
import operationsapp.User;

/**
 *
 * @author matheus
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        user = new User();
    }
    
    public GUI(User user,OperationsApp op){
        initComponents();
        this.user = user;
        this.listChargeCategory=op.getChargeCategory();
        this.listRevenueCategory = op.getRevenueCategory();
        this.tm = new TableMethods();
        this.graphics = new GUIGraphicsMethods();
        update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioButtonGroupAdd = new javax.swing.ButtonGroup();
        dialogSelectRow = new javax.swing.JDialog();
        panelShowSelect = new javax.swing.JPanel();
        panelInformationsSelected = new javax.swing.JPanel();
        textTitleEdit = new javax.swing.JTextField();
        boxOperationsEdit = new javax.swing.JComboBox<>();
        boxCategoryEdit = new javax.swing.JComboBox<>();
        textDateEdit = new javax.swing.JTextField();
        textValueEdit = new javax.swing.JTextField();
        panelButtonSelected = new javax.swing.JPanel();
        buttonSaveEdit = new javax.swing.JButton();
        buttonCancelEdit = new javax.swing.JButton();
        buttonRemoveSelectedIten = new javax.swing.JButton();
        dialogAbout = new javax.swing.JDialog();
        panelInformationSystem = new javax.swing.JPanel();
        panelMembers = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textMembers = new javax.swing.JTextArea();
        panelButtonOkInformationSystem = new javax.swing.JPanel();
        buttonOkInformationSystem = new javax.swing.JButton();
        panelAdd = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        textAddTitle = new javax.swing.JTextField();
        radioButtonAddCharge = new javax.swing.JRadioButton();
        radioButtonAddRevenue = new javax.swing.JRadioButton();
        labelDate = new javax.swing.JLabel();
        labelValue = new javax.swing.JLabel();
        labelCategory = new javax.swing.JLabel();
        boxAddCategory = new javax.swing.JComboBox<>();
        buttonAdd = new javax.swing.JButton();
        textAddValue = new javax.swing.JTextField();
        textAddDate = new javax.swing.JTextField();
        textAddDate = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            textAddDate = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        panelFilter = new javax.swing.JPanel();
        panelSelectFilter = new javax.swing.JPanel();
        checkBoxFilterOperation = new javax.swing.JCheckBox();
        boxFilterOperation = new javax.swing.JComboBox<>();
        panelDateFilter = new javax.swing.JPanel();
        checkBoxFilterDate = new javax.swing.JCheckBox();
        labelFilterDateFrom = new javax.swing.JLabel();
        labelFilterDateTo = new javax.swing.JLabel();
        textFilterDateFrom = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            textFilterDateFrom = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        textFilterDateTo = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            textFilterDateTo = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        panelButtonFilter = new javax.swing.JPanel();
        buttonSelectFilter = new javax.swing.JButton();
        buttonClearFilter = new javax.swing.JButton();
        panelTabInformation = new javax.swing.JTabbedPane();
        panelExtractTab = new javax.swing.JPanel();
        panelExtractTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableExtract = new javax.swing.JTable();
        panelBalance = new javax.swing.JPanel();
        labelBalance = new javax.swing.JLabel();
        labelBalanceValue = new javax.swing.JLabel();
        panelGraphics = new javax.swing.JPanel();
        panelAnualGraphics = new javax.swing.JPanel();
        panelGraphicsTab = new javax.swing.JTabbedPane();
        panelCategoryGraphics = new javax.swing.JPanel();
        panelDailyGraphics = new javax.swing.JPanel();
        panelMenu = new javax.swing.JMenuBar();
        selectFilesMenu = new javax.swing.JMenu();
        buttonNewFile = new javax.swing.JMenuItem();
        buttonMenuOpenFile = new javax.swing.JMenuItem();
        buttonMenuSaveAs = new javax.swing.JMenuItem();
        selectMenuHelp = new javax.swing.JMenu();
        buttonMenuAbout = new javax.swing.JMenuItem();

        dialogSelectRow.setResizable(false);

        textTitleEdit.setText("jTextField1");

        boxOperationsEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        boxCategoryEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        textDateEdit.setText("jTextField1");

        textValueEdit.setText("jTextField1");

        javax.swing.GroupLayout panelInformationsSelectedLayout = new javax.swing.GroupLayout(panelInformationsSelected);
        panelInformationsSelected.setLayout(panelInformationsSelectedLayout);
        panelInformationsSelectedLayout.setHorizontalGroup(
            panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformationsSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textTitleEdit)
                    .addGroup(panelInformationsSelectedLayout.createSequentialGroup()
                        .addGroup(panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textDateEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                            .addComponent(boxOperationsEdit, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textValueEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(boxCategoryEdit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInformationsSelectedLayout.setVerticalGroup(
            panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformationsSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitleEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxOperationsEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxCategoryEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInformationsSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textDateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textValueEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonSaveEdit.setText("Salvar");

        buttonCancelEdit.setText("Cancelar");

        buttonRemoveSelectedIten.setText("EXCLUIR");

        javax.swing.GroupLayout panelButtonSelectedLayout = new javax.swing.GroupLayout(panelButtonSelected);
        panelButtonSelected.setLayout(panelButtonSelectedLayout);
        panelButtonSelectedLayout.setHorizontalGroup(
            panelButtonSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonSelectedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonRemoveSelectedIten)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(buttonCancelEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSaveEdit)
                .addContainerGap())
        );
        panelButtonSelectedLayout.setVerticalGroup(
            panelButtonSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonSelectedLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelButtonSelectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSaveEdit)
                    .addComponent(buttonCancelEdit)
                    .addComponent(buttonRemoveSelectedIten))
                .addContainerGap())
        );

        buttonSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            }
        });
        buttonCancelEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dialogSelectRow.setVisible(false);
            }
        });
        buttonRemoveSelectedIten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user.del_operation(tableExtract.getSelectedRow());
                dialogSelectRow.setVisible(false);
                update();
                tableExtract.clearSelection();
            }
        });

        javax.swing.GroupLayout panelShowSelectLayout = new javax.swing.GroupLayout(panelShowSelect);
        panelShowSelect.setLayout(panelShowSelectLayout);
        panelShowSelectLayout.setHorizontalGroup(
            panelShowSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShowSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInformationsSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelButtonSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelShowSelectLayout.setVerticalGroup(
            panelShowSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShowSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelInformationsSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtonSelected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogSelectRowLayout = new javax.swing.GroupLayout(dialogSelectRow.getContentPane());
        dialogSelectRow.getContentPane().setLayout(dialogSelectRowLayout);
        dialogSelectRowLayout.setHorizontalGroup(
            dialogSelectRowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 309, Short.MAX_VALUE)
            .addGroup(dialogSelectRowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dialogSelectRowLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelShowSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        dialogSelectRowLayout.setVerticalGroup(
            dialogSelectRowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 167, Short.MAX_VALUE)
            .addGroup(dialogSelectRowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dialogSelectRowLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelShowSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        dialogAbout.setResizable(false);

        panelInformationSystem.setMaximumSize(new java.awt.Dimension(491, 202));
        panelInformationSystem.setMinimumSize(new java.awt.Dimension(491, 202));

        textMembers.setEditable(false);
        textMembers.setColumns(20);
        textMembers.setRows(5);
        jScrollPane3.setViewportView(textMembers);

        javax.swing.GroupLayout panelMembersLayout = new javax.swing.GroupLayout(panelMembers);
        panelMembers.setLayout(panelMembersLayout);
        panelMembersLayout.setHorizontalGroup(
            panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        panelMembersLayout.setVerticalGroup(
            panelMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
        );

        buttonOkInformationSystem.setText("OK");

        javax.swing.GroupLayout panelButtonOkInformationSystemLayout = new javax.swing.GroupLayout(panelButtonOkInformationSystem);
        panelButtonOkInformationSystem.setLayout(panelButtonOkInformationSystemLayout);
        panelButtonOkInformationSystemLayout.setHorizontalGroup(
            panelButtonOkInformationSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelButtonOkInformationSystemLayout.createSequentialGroup()
                .addContainerGap(213, Short.MAX_VALUE)
                .addComponent(buttonOkInformationSystem)
                .addGap(211, 211, 211))
        );
        panelButtonOkInformationSystemLayout.setVerticalGroup(
            panelButtonOkInformationSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonOkInformationSystemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonOkInformationSystem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonOkInformationSystem.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                panelInformationSystem.setVisible(true);
            }
        });

        javax.swing.GroupLayout panelInformationSystemLayout = new javax.swing.GroupLayout(panelInformationSystem);
        panelInformationSystem.setLayout(panelInformationSystemLayout);
        panelInformationSystemLayout.setHorizontalGroup(
            panelInformationSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformationSystemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInformationSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelButtonOkInformationSystem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMembers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelInformationSystemLayout.setVerticalGroup(
            panelInformationSystemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformationSystemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelMembers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtonOkInformationSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
        dialogAbout.getContentPane().setLayout(dialogAboutLayout);
        dialogAboutLayout.setHorizontalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
            .addGroup(dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dialogAboutLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelInformationSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        dialogAboutLayout.setVerticalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
            .addGroup(dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(dialogAboutLayout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(panelInformationSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("frameMain"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        panelAdd.setBorder(javax.swing.BorderFactory.createTitledBorder("Adicionar"));
        panelAdd.setMaximumSize(new java.awt.Dimension(343, 150));
        panelAdd.setMinimumSize(new java.awt.Dimension(343, 150));

        labelTitle.setText("Titulo");

        radioButtonGroupAdd.add(radioButtonAddCharge);
        radioButtonAddCharge.setText("Despesa");

        radioButtonGroupAdd.add(radioButtonAddRevenue);
        radioButtonAddRevenue.setText("Receita");

        labelDate.setText("Data");

        labelValue.setText("Valor");

        labelCategory.setText("Categoria");

        buttonAdd.setText("Adicionar");

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textAddTitle)
                    .addComponent(boxAddCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle)
                            .addComponent(labelCategory)
                            .addGroup(panelAddLayout.createSequentialGroup()
                                .addComponent(radioButtonAddCharge)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radioButtonAddRevenue)))
                        .addGap(0, 53, Short.MAX_VALUE)))
                .addGap(16, 16, 16)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(textAddValue)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelValue)
                            .addComponent(labelDate))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(textAddDate)))
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(labelDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAddDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addComponent(labelTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelValue)
                            .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioButtonAddCharge)
                                .addComponent(radioButtonAddRevenue)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCategory)
                            .addComponent(textAddValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxAddCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonAdd)))))
        );

        radioButtonAddCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAddCategory.removeAllItems();
                for(int i=0;i<listChargeCategory.size();i++){
                    boxAddCategory.addItem(listChargeCategory.get(i).getName());
                }
                boxAddCategory.setEnabled(true);
            }
        });
        radioButtonAddRevenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAddCategory.removeAllItems();
                for(int i=0;i<listRevenueCategory.size();i++){
                    boxAddCategory.addItem(listRevenueCategory.get(i).getName());
                }
                boxAddCategory.setEnabled(true);
            }
        });
        if(radioButtonAddCharge.isSelected() == false && radioButtonAddRevenue.isSelected() == false ){
            boxAddCategory.setEnabled(false);
        }
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(textAddValue.getText().trim().equals("")){
                    JOptionPane.showMessageDialog(null, "Campo Valor vazio");
                }else if(textAddDate.getText().trim().equals("")){
                    JOptionPane.showMessageDialog(null, "Campo Data vazio");
                }else{
                    addButton();
                }
            }
        });

        panelFilter.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        boxFilterOperation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Operação" }));
        boxFilterOperation.setEnabled(false);

        labelFilterDateFrom.setText("De:");

        labelFilterDateTo.setText("Até:");

        textFilterDateFrom.setEnabled(false);

        textFilterDateTo.setEnabled(false);

        javax.swing.GroupLayout panelDateFilterLayout = new javax.swing.GroupLayout(panelDateFilter);
        panelDateFilter.setLayout(panelDateFilterLayout);
        panelDateFilterLayout.setHorizontalGroup(
            panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDateFilterLayout.createSequentialGroup()
                .addGroup(panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDateFilterLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDateFilterLayout.createSequentialGroup()
                                .addComponent(labelFilterDateTo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(panelDateFilterLayout.createSequentialGroup()
                                .addComponent(labelFilterDateFrom)
                                .addGap(8, 8, 8)))
                        .addGroup(panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textFilterDateFrom)
                            .addComponent(textFilterDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                    .addGroup(panelDateFilterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkBoxFilterDate)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        panelDateFilterLayout.setVerticalGroup(
            panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDateFilterLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFilterDateFrom)
                    .addComponent(textFilterDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxFilterDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDateFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFilterDateTo)
                    .addComponent(textFilterDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        checkBoxFilterDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(checkBoxFilterDate.isSelected()){
                    textFilterDateFrom.setEnabled(true);
                    textFilterDateTo.setEnabled(true);
                }
                else{
                    textFilterDateFrom.setText("");
                    textFilterDateTo.setText("");
                    textFilterDateFrom.setEnabled(false);
                    textFilterDateTo.setEnabled(false);
                }
            }
        });

        buttonSelectFilter.setText("Filtrar");

        buttonClearFilter.setText("Limpar");

        javax.swing.GroupLayout panelButtonFilterLayout = new javax.swing.GroupLayout(panelButtonFilter);
        panelButtonFilter.setLayout(panelButtonFilterLayout);
        panelButtonFilterLayout.setHorizontalGroup(
            panelButtonFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelButtonFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonClearFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSelectFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelButtonFilterLayout.setVerticalGroup(
            panelButtonFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelButtonFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonSelectFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonClearFilter)
                .addContainerGap())
        );

        buttonSelectFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(checkBoxFilterOperation.isSelected()){
                    if(checkBoxFilterDate.isSelected()){
                        if(boxFilterOperation.getSelectedItem().toString().equals("Despesa")){
                            tm.filterExtractChargeDate(user,tableExtract,textFilterDateFrom.getText(),textFilterDateTo.getText());
                            graphics.filterGraphicsChargeDate(user,panelCategoryGraphics, panelDailyGraphics ,textFilterDateFrom.getText(),textFilterDateTo.getText());
                        }else{
                            tm.filterExtractRevenueDate(user,tableExtract,textFilterDateFrom.getText(),textFilterDateTo.getText());
                            graphics.filterGraphicsRevenueDate(user,panelCategoryGraphics, panelDailyGraphics ,textFilterDateFrom.getText(),textFilterDateTo.getText());
                        }
                    }else{
                        if(boxFilterOperation.getSelectedItem().toString().equals("Despesa")){
                            tm.filterExtractCharge(user, tableExtract);
                            graphics.filterGraphicsCharge(user,panelCategoryGraphics, panelDailyGraphics ,textFilterDateFrom.getText(),textFilterDateTo.getText());
                        }else{
                            tm.filterExtractRevenue(user, tableExtract);
                            graphics.filterGraphicsRevenue(user,panelCategoryGraphics, panelDailyGraphics ,textFilterDateFrom.getText(),textFilterDateTo.getText());
                        }
                    }
                }else{
                    if(checkBoxFilterDate.isSelected()){
                        tm.filterExtractDate(user, tableExtract, textFilterDateFrom.getText(), textFilterDateTo.getText());
                        graphics.filterGraphicsDate(user,panelCategoryGraphics, panelDailyGraphics ,textFilterDateFrom.getText(),textFilterDateTo.getText());
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Selecione algum filtro!");
                    }
                }
            }
        });
        buttonClearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update();
                boxFilterOperation.removeAllItems();
                boxFilterOperation.addItem("Operação");
                boxFilterOperation.setEnabled(false);
                checkBoxFilterOperation.setSelected(false);
                checkBoxFilterDate.setSelected(false);
                textFilterDateFrom.setText("");
                textFilterDateTo.setText("");
                textFilterDateFrom.setEnabled(false);
                textFilterDateTo.setEnabled(false);
            }
        });

        javax.swing.GroupLayout panelSelectFilterLayout = new javax.swing.GroupLayout(panelSelectFilter);
        panelSelectFilter.setLayout(panelSelectFilterLayout);
        panelSelectFilterLayout.setHorizontalGroup(
            panelSelectFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectFilterLayout.createSequentialGroup()
                .addGroup(panelSelectFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelSelectFilterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(checkBoxFilterOperation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxFilterOperation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButtonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        panelSelectFilterLayout.setVerticalGroup(
            panelSelectFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSelectFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boxFilterOperation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxFilterOperation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelSelectFilterLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(panelButtonFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        checkBoxFilterOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (checkBoxFilterOperation.isSelected()){
                    boxFilterOperation.removeAllItems();
                    boxFilterOperation.addItem("Despesa");
                    boxFilterOperation.addItem("Receita");
                    boxFilterOperation.setEnabled(true);
                }
                else{
                    boxFilterOperation.removeAllItems();
                    boxFilterOperation.addItem("Operação");
                    boxFilterOperation.setEnabled(false);
                }
            }
        });

        javax.swing.GroupLayout panelFilterLayout = new javax.swing.GroupLayout(panelFilter);
        panelFilter.setLayout(panelFilterLayout);
        panelFilterLayout.setHorizontalGroup(
            panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSelectFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFilterLayout.setVerticalGroup(
            panelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFilterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSelectFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTabInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tableExtract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Titulo", "Categoria", "Date", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableExtract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableExtractMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableExtract);
        tableExtract.getColumnModel().getColumn(0).setPreferredWidth(200);
        tableExtract.getColumnModel().getColumn(1).setPreferredWidth(200);
        tableExtract.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableExtract.getColumnModel().getColumn(3).setPreferredWidth(100);

        panelBalance.setMaximumSize(new java.awt.Dimension(428, 52));
        panelBalance.setMinimumSize(new java.awt.Dimension(428, 52));

        labelBalance.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelBalance.setText("Saldo:");

        labelBalanceValue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelBalanceValue.setText("jLabel1");

        javax.swing.GroupLayout panelBalanceLayout = new javax.swing.GroupLayout(panelBalance);
        panelBalance.setLayout(panelBalanceLayout);
        panelBalanceLayout.setHorizontalGroup(
            panelBalanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBalanceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelBalance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelBalanceValue, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelBalanceLayout.setVerticalGroup(
            panelBalanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBalanceLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelBalanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBalance)
                    .addComponent(labelBalanceValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelExtractTableLayout = new javax.swing.GroupLayout(panelExtractTable);
        panelExtractTable.setLayout(panelExtractTableLayout);
        panelExtractTableLayout.setHorizontalGroup(
            panelExtractTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
            .addComponent(panelBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelExtractTableLayout.setVerticalGroup(
            panelExtractTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtractTableLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelExtractTabLayout = new javax.swing.GroupLayout(panelExtractTab);
        panelExtractTab.setLayout(panelExtractTabLayout);
        panelExtractTabLayout.setHorizontalGroup(
            panelExtractTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtractTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExtractTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelExtractTabLayout.setVerticalGroup(
            panelExtractTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExtractTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelExtractTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelTabInformation.addTab("Extrato", panelExtractTab);

        panelAnualGraphics.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelAnualGraphicsLayout = new javax.swing.GroupLayout(panelAnualGraphics);
        panelAnualGraphics.setLayout(panelAnualGraphicsLayout);
        panelAnualGraphicsLayout.setHorizontalGroup(
            panelAnualGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelAnualGraphicsLayout.setVerticalGroup(
            panelAnualGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 116, Short.MAX_VALUE)
        );

        panelGraphicsTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelCategoryGraphicsLayout = new javax.swing.GroupLayout(panelCategoryGraphics);
        panelCategoryGraphics.setLayout(panelCategoryGraphicsLayout);
        panelCategoryGraphicsLayout.setHorizontalGroup(
            panelCategoryGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 635, Short.MAX_VALUE)
        );
        panelCategoryGraphicsLayout.setVerticalGroup(
            panelCategoryGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        panelGraphicsTab.addTab("Categorias", panelCategoryGraphics);

        javax.swing.GroupLayout panelDailyGraphicsLayout = new javax.swing.GroupLayout(panelDailyGraphics);
        panelDailyGraphics.setLayout(panelDailyGraphicsLayout);
        panelDailyGraphicsLayout.setHorizontalGroup(
            panelDailyGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 635, Short.MAX_VALUE)
        );
        panelDailyGraphicsLayout.setVerticalGroup(
            panelDailyGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        panelGraphicsTab.addTab("Diario", panelDailyGraphics);

        javax.swing.GroupLayout panelGraphicsLayout = new javax.swing.GroupLayout(panelGraphics);
        panelGraphics.setLayout(panelGraphicsLayout);
        panelGraphicsLayout.setHorizontalGroup(
            panelGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGraphicsTab)
            .addComponent(panelAnualGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelGraphicsLayout.setVerticalGroup(
            panelGraphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGraphicsLayout.createSequentialGroup()
                .addComponent(panelGraphicsTab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelAnualGraphics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTabInformation.addTab("Graficos", panelGraphics);

        selectFilesMenu.setText("Arquivos");

        buttonNewFile.setText("Novo");
        selectFilesMenu.add(buttonNewFile);
        buttonNewFile.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                int dialog = JOptionPane.showConfirmDialog(null, "Deseja salvar o arquivo atual?");
                if(dialog == JOptionPane.CANCEL_OPTION){
                    //não faz nada
                }
                else if(dialog == JOptionPane.NO_OPTION){
                    removeFile();
                }
                else if(dialog == JOptionPane.YES_OPTION){
                    try {
                        saveFile();
                    } catch (IOException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });

        buttonMenuOpenFile.setText("Abrir");
        buttonMenuOpenFile.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                int dialog = JOptionPane.showConfirmDialog(null, "Deseja salvar o arquivo atual?");
                if(dialog == JOptionPane.CANCEL_OPTION){
                    //não faz nada
                }
                else if(dialog == JOptionPane.NO_OPTION){
                    removeFile();
                    try {
                        openFile();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else if(dialog == JOptionPane.YES_OPTION){
                    try {
                        saveFile();
                    } catch (IOException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        openFile();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        });
        selectFilesMenu.add(buttonMenuOpenFile);

        buttonMenuSaveAs.setText("Salvar como...");
        buttonMenuSaveAs.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                try {
                    saveFile();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        selectFilesMenu.add(buttonMenuSaveAs);

        panelMenu.add(selectFilesMenu);

        selectMenuHelp.setText("Help");

        buttonMenuAbout.setText("Sobre");
        selectMenuHelp.add(buttonMenuAbout);
        selectMenuHelp.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                dialogAbout.setLocationRelativeTo(null);
                dialogAbout.setSize(dialogAbout.getPreferredSize());
                dialogAbout.setVisible(true);
            }
        });

        panelMenu.add(selectMenuHelp);

        setJMenuBar(panelMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTabInformation)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTabInformation)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        if(panelTabInformation.isShowing()){
            GUIGraphicsMethods graphics = new GUIGraphicsMethods();
            graphics.buildAnualChart(user,panelAnualGraphics);
            graphics.updateGraphics(user,panelCategoryGraphics,panelDailyGraphics);
        }

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableExtractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableExtractMouseClicked
        // TODO add your handling code here:
        MouseEvent m = (MouseEvent) evt;
            if (m.getClickCount() >= 2) {
                int selectRow = tableExtract.getSelectedRow();
                textTitleEdit.setText(tableExtract.getValueAt(selectRow, 0).toString());
                textDateEdit.setText(tableExtract.getValueAt(selectRow, 2).toString());
                textValueEdit.setText(tableExtract.getValueAt(selectRow, 3).toString());
                dialogSelectRow.setLocationRelativeTo(null);  
                dialogSelectRow.setSize(dialogSelectRow.getPreferredSize());
                dialogSelectRow.setVisible(true);
            }
    }//GEN-LAST:event_tableExtractMouseClicked

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
     //   update();
    }//GEN-LAST:event_formComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxAddCategory;
    private javax.swing.JComboBox<String> boxCategoryEdit;
    private javax.swing.JComboBox<String> boxFilterOperation;
    private javax.swing.JComboBox<String> boxOperationsEdit;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancelEdit;
    private javax.swing.JButton buttonClearFilter;
    private javax.swing.JMenuItem buttonMenuAbout;
    private javax.swing.JMenuItem buttonMenuOpenFile;
    private javax.swing.JMenuItem buttonMenuSaveAs;
    private javax.swing.JMenuItem buttonNewFile;
    private javax.swing.JButton buttonOkInformationSystem;
    private javax.swing.JButton buttonRemoveSelectedIten;
    private javax.swing.JButton buttonSaveEdit;
    private javax.swing.JButton buttonSelectFilter;
    private javax.swing.JCheckBox checkBoxFilterDate;
    private javax.swing.JCheckBox checkBoxFilterOperation;
    private javax.swing.JDialog dialogAbout;
    private javax.swing.JDialog dialogSelectRow;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelBalance;
    private javax.swing.JLabel labelBalanceValue;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelFilterDateFrom;
    private javax.swing.JLabel labelFilterDateTo;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelValue;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelAnualGraphics;
    private javax.swing.JPanel panelBalance;
    private javax.swing.JPanel panelButtonFilter;
    private javax.swing.JPanel panelButtonOkInformationSystem;
    private javax.swing.JPanel panelButtonSelected;
    private javax.swing.JPanel panelCategoryGraphics;
    private javax.swing.JPanel panelDailyGraphics;
    private javax.swing.JPanel panelDateFilter;
    private javax.swing.JPanel panelExtractTab;
    private javax.swing.JPanel panelExtractTable;
    private javax.swing.JPanel panelFilter;
    private javax.swing.JPanel panelGraphics;
    private javax.swing.JTabbedPane panelGraphicsTab;
    private javax.swing.JPanel panelInformationSystem;
    private javax.swing.JPanel panelInformationsSelected;
    private javax.swing.JPanel panelMembers;
    private javax.swing.JMenuBar panelMenu;
    private javax.swing.JPanel panelSelectFilter;
    private javax.swing.JPanel panelShowSelect;
    private javax.swing.JTabbedPane panelTabInformation;
    private javax.swing.JRadioButton radioButtonAddCharge;
    private javax.swing.JRadioButton radioButtonAddRevenue;
    private javax.swing.ButtonGroup radioButtonGroupAdd;
    private javax.swing.JMenu selectFilesMenu;
    private javax.swing.JMenu selectMenuHelp;
    private javax.swing.JTable tableExtract;
    private javax.swing.JTextField textAddDate;
    private javax.swing.JTextField textAddTitle;
    private javax.swing.JTextField textAddValue;
    private javax.swing.JTextField textDateEdit;
    private javax.swing.JTextField textFilterDateFrom;
    private javax.swing.JTextField textFilterDateTo;
    private javax.swing.JTextArea textMembers;
    private javax.swing.JTextField textTitleEdit;
    private javax.swing.JTextField textValueEdit;
    // End of variables declaration//GEN-END:variables
    
    User user;
    TableMethods tm;
    GUIGraphicsMethods graphics;
    List<RevenueCategory> listRevenueCategory;
    List<ChargeCategory> listChargeCategory;
    
    private void addButton(){
        DateOperations dto = new DateOperations();
        if(radioButtonAddCharge.isSelected()==true){
            user.add_charge(new Charge(user.get_last_id(), Double.parseDouble(textAddValue.getText()), textAddTitle.getText(),
                    dto.formatDate(textAddDate.getText()), listChargeCategory.get(boxAddCategory.getSelectedIndex())));
        }
        else{
             user.add_revenue(new Revenue(user.get_last_id(), Double.parseDouble(textAddValue.getText()), textAddTitle.getText(),
                     dto.formatDate(textAddDate.getText()), listRevenueCategory.get(boxAddCategory.getSelectedIndex())));
        }
        balanceUpdate();
        TableMethods table = new TableMethods();
        table.updateList(user,tableExtract);
        textAddValue.setText(null);
        textAddDate.setText(null);
        textAddTitle.setText(null);
        boxAddCategory.removeAllItems();
        boxAddCategory.setEnabled(false);
        radioButtonGroupAdd.clearSelection();
    }
    
    public void balanceUpdate(){
        DecimalFormat df = new DecimalFormat("#,###.00");
        labelBalanceValue.setText("R$ " + df.format(user.get_balance()));
        if(user.get_balance()<0){
            labelBalanceValue.setForeground(Color.red);
        }else if(user.get_balance()>0){
            labelBalanceValue.setForeground(Color.green);
        }else{
            labelBalanceValue.setForeground(Color.BLACK);
        }
    }

    public void removeFile(){
        FileManager fm = new FileManager();
        fm.newFile();
        this.user = new User();
        update();
    }
    
    public void update(){
        tm.updateList(this.user, tableExtract);
        balanceUpdate();
        graphics.initiateGraphics(this.user, panelAnualGraphics,panelCategoryGraphics,panelDailyGraphics);
    }
    
    public void saveFile() throws IOException{
        FileManager fm = new FileManager();
        JFileChooser fileChooser = new JFileChooser();
        int sb = fileChooser.showSaveDialog(null);
        if(sb == JFileChooser.APPROVE_OPTION);
            File saveFile = fileChooser.getSelectedFile();
            fm.saveAsFile(saveFile);
    }
    
    public void openFile() throws FileNotFoundException, ParseException{
        FileManager fm = new FileManager();
        JFileChooser fileChooser = new JFileChooser();
        int sb = fileChooser.showOpenDialog(null);
        if(sb == JFileChooser.APPROVE_OPTION){
            File openFile = fileChooser.getSelectedFile();
            try {
                user = fm.openFile(openFile);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            update();
        }
    }
}
